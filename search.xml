<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World</title>
    <url>/2023/09/23/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>test11</title>
    <url>/2023/09/23/test11/</url>
    <content><![CDATA[<p>这是一个小测试</p>
<span id="more"></span>
<p>以上标记为一个分界线，用于展示显示的缩略内容<br>测试是一个好东西</p>
]]></content>
      <categories>
        <category>默认</category>
      </categories>
      <tags>
        <tag>默认</tag>
      </tags>
  </entry>
  <entry>
    <title></title>
    <url>/2023/09/23/numpy/</url>
    <content><![CDATA[<p>ndarray</p>
<h2 id="创建ndarray的方法"><a href="#创建ndarray的方法" class="headerlink" title="创建ndarray的方法"></a>创建ndarray的方法</h2><h3 id="array"><a href="#array" class="headerlink" title="array"></a>array</h3><p>通过数组</p>
<h3 id="1"><a href="#1" class="headerlink" title="1"></a>1</h3><p>zeros,empty,ones</p>
<p>…_like</p>
<h3 id="2"><a href="#2" class="headerlink" title="2"></a>2</h3><ul>
<li><p>arange</p>
<p>类似于range</p>
</li>
<li><p>linspace</p>
<p>等分区间</p>
</li>
<li><p>fromfunction</p>
<p>按照函数生成，以下标为参数</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">fromfunction(<span class="keyword">lambda</span> i,j:j,[<span class="number">4</span>,<span class="number">4</span>])</span><br></pre></td></tr></table></figure></li>
</ul>
<h2 id="ndarray的一些方法"><a href="#ndarray的一些方法" class="headerlink" title="ndarray的一些方法"></a>ndarray的一些方法</h2><h3 id="1-自身的方法"><a href="#1-自身的方法" class="headerlink" title="1.自身的方法"></a>1.自身的方法</h3><p>sum,min,max</p>
<p>().sum()</p>
<p>可以使用axis指定维度</p>
<p>().sum(axis&#x3D;0,1,2…)</p>
<h3 id="2-numpy的一些方法"><a href="#2-numpy的一些方法" class="headerlink" title="2.numpy的一些方法"></a>2.numpy的一些方法</h3><p>在方法中使用axis&#x3D;None参数一般得到一个操作后的一维数组</p>
<ul>
<li><p>all,any (可以使用axis指定维度),用于判断数组中是否都是（或有）真值</p>
</li>
<li><p>sort,用于在指定轴对数组进行排序<code> np.sort(x, axis=0)</code>,不改变原数组</p>
</li>
<li><p>nonzero,用于获得数组中非零元素的坐标</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">a = np.array([[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>], [<span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>]])</span><br><span class="line">a &gt; <span class="number">3</span></span><br><span class="line">array([[<span class="literal">False</span>, <span class="literal">False</span>, <span class="literal">False</span>],</span><br><span class="line">       [ <span class="literal">True</span>,  <span class="literal">True</span>,  <span class="literal">True</span>],</span><br><span class="line">       [ <span class="literal">True</span>,  <span class="literal">True</span>,  <span class="literal">True</span>]])</span><br><span class="line">np.nonzero(a &gt; <span class="number">3</span>)</span><br><span class="line">(array([<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>]), array([<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>]))</span><br></pre></td></tr></table></figure>
</li>
<li><p>argmax,argmin,argsort,类似于去掉arg的函数，但是返回的是操作之后的数组的索引</p>
</li>
<li><p>mean,var,返回沿指定轴方向的平均值或方差，<code>np.var(a, axis=0)</code>,如果不指定axis会对全体数据求值</p>
</li>
<li><p>cross，dot，返回向量的叉积或行列式的值</p>
</li>
<li><p>cumsum计算数组沿着轴向的累加和，可以设置axis</p>
</li>
<li><p>where,相当于三元表达式? :</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">a = np.arange(<span class="number">10</span>)</span><br><span class="line">a</span><br><span class="line">array([<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>])</span><br><span class="line">np.where(a &lt; <span class="number">5</span>, a, <span class="number">10</span>*a)</span><br><span class="line">array([ <span class="number">0</span>,  <span class="number">1</span>,  <span class="number">2</span>,  <span class="number">3</span>,  <span class="number">4</span>, <span class="number">50</span>, <span class="number">60</span>, <span class="number">70</span>, <span class="number">80</span>, <span class="number">90</span>])</span><br><span class="line">这也可以用于多维数组：</span><br><span class="line"></span><br><span class="line">np.where([[<span class="literal">True</span>, <span class="literal">False</span>], [<span class="literal">True</span>, <span class="literal">True</span>]],</span><br><span class="line">         [[<span class="number">1</span>, <span class="number">2</span>], [<span class="number">3</span>, <span class="number">4</span>]],</span><br><span class="line">         [[<span class="number">9</span>, <span class="number">8</span>], [<span class="number">7</span>, <span class="number">6</span>]])</span><br><span class="line">array([[<span class="number">1</span>, <span class="number">8</span>],</span><br><span class="line">       [<span class="number">3</span>, <span class="number">4</span>]])</span><br></pre></td></tr></table></figure></li>
</ul>
<h2 id="变换数组自身"><a href="#变换数组自身" class="headerlink" title="变换数组自身"></a>变换数组自身</h2><h3 id="1-1"><a href="#1-1" class="headerlink" title="1"></a>1</h3><p>reshape</p>
<p>（-1自动计算大小)返回特定形状数组，不修改原数组</p>
<p>resize</p>
<p>修改原数组</p>
<h3 id="2-1"><a href="#2-1" class="headerlink" title="2"></a>2</h3><ul>
<li><p>concatenate</p>
<p>拼接函数，可以按照特定axis方向(默认为0)拼接不同的数组,当axis为none时,会变成一维数组</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 数组a,b</span></span><br><span class="line">concatenate((a,b),axis=<span class="number">1</span>)</span><br></pre></td></tr></table></figure>
</li>
<li><p>stack</p>
<p>在指定的axis上增加一个维度，将数组堆叠起来,默认axis为0,要求数组的形状完全相同。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">arrays = [np.random.randn(<span class="number">3</span>, <span class="number">4</span>) <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>)]</span><br><span class="line">np.stack(arrays, axis=<span class="number">0</span>).shape</span><br><span class="line">(<span class="number">10</span>, <span class="number">3</span>, <span class="number">4</span>)</span><br><span class="line"></span><br><span class="line">np.stack(arrays, axis=<span class="number">1</span>).shape</span><br><span class="line">(<span class="number">3</span>, <span class="number">10</span>, <span class="number">4</span>)</span><br><span class="line"></span><br><span class="line">np.stack(arrays, axis=<span class="number">2</span>).shape</span><br><span class="line">(<span class="number">3</span>, <span class="number">4</span>, <span class="number">10</span>)</span><br><span class="line"></span><br><span class="line">a = np.array([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>])</span><br><span class="line">b = np.array([<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>])</span><br><span class="line">np.stack((a, b))</span><br><span class="line">array([[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>],</span><br><span class="line">       [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]])</span><br><span class="line">np.stack((a, b), axis=-<span class="number">1</span>)</span><br><span class="line">array([[<span class="number">1</span>, <span class="number">4</span>],</span><br><span class="line">       [<span class="number">2</span>, <span class="number">5</span>],</span><br><span class="line">       [<span class="number">3</span>, <span class="number">6</span>]])</span><br></pre></td></tr></table></figure>
</li>
<li><p>block</p>
<p>将数组按照自然的方式拼接起来</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">A = np.eye(<span class="number">2</span>) * <span class="number">2</span></span><br><span class="line">B = np.eye(<span class="number">3</span>) * <span class="number">3</span></span><br><span class="line">np.block([</span><br><span class="line">    [A,               np.zeros((<span class="number">2</span>, <span class="number">3</span>))],</span><br><span class="line">    [np.ones((<span class="number">3</span>, <span class="number">2</span>)), B               ]</span><br><span class="line">])</span><br><span class="line">array([[<span class="number">2.</span>, <span class="number">0.</span>, <span class="number">0.</span>, <span class="number">0.</span>, <span class="number">0.</span>],</span><br><span class="line">       [<span class="number">0.</span>, <span class="number">2.</span>, <span class="number">0.</span>, <span class="number">0.</span>, <span class="number">0.</span>],</span><br><span class="line">       [<span class="number">1.</span>, <span class="number">1.</span>, <span class="number">3.</span>, <span class="number">0.</span>, <span class="number">0.</span>],</span><br><span class="line">       [<span class="number">1.</span>, <span class="number">1.</span>, <span class="number">0.</span>, <span class="number">3.</span>, <span class="number">0.</span>],</span><br><span class="line">       [<span class="number">1.</span>, <span class="number">1.</span>, <span class="number">0.</span>, <span class="number">0.</span>, <span class="number">3.</span>]])</span><br></pre></td></tr></table></figure>

<h2 id="数组的浅拷贝和深拷贝"><a href="#数组的浅拷贝和深拷贝" class="headerlink" title="数组的浅拷贝和深拷贝"></a>数组的浅拷贝和深拷贝</h2><h3 id="view"><a href="#view" class="headerlink" title="view"></a>view</h3><p>是浅拷贝，数组切片等返回的是view,对view的修改返回到源对象上</p>
<h3 id="copy"><a href="#copy" class="headerlink" title="copy"></a>copy</h3><p>是深拷贝,返回一个新的对象</p>
</li>
</ul>
<h2 id="花式索引"><a href="#花式索引" class="headerlink" title="花式索引"></a>花式索引</h2><ul>
<li><p>索引数组</p>
<p>当索引数组<code>a</code>是多维的时，单个索引数组指的是第一个维度<code>a</code>，我们还可以为多个维度提供索引。每个维度的索引数组必须具有相同的形状</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">a = np.arange(<span class="number">12</span>).reshape(<span class="number">3</span>,<span class="number">4</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a</span><br><span class="line">array([[ <span class="number">0</span>,  <span class="number">1</span>,  <span class="number">2</span>,  <span class="number">3</span>],</span><br><span class="line">       [ <span class="number">4</span>,  <span class="number">5</span>,  <span class="number">6</span>,  <span class="number">7</span>],</span><br><span class="line">       [ <span class="number">8</span>,  <span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>]])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>i = np.array( [ [<span class="number">0</span>,<span class="number">1</span>],                        <span class="comment"># indices for the first dim of a</span></span><br><span class="line"><span class="meta">... </span>                [<span class="number">1</span>,<span class="number">2</span>] ] )</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>j = np.array( [ [<span class="number">2</span>,<span class="number">1</span>],                        <span class="comment"># indices for the second dim</span></span><br><span class="line"><span class="meta">... </span>                [<span class="number">3</span>,<span class="number">3</span>] ] )</span><br><span class="line">&gt;&gt;&gt;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a[i,j]                                     <span class="comment"># i and j must have equal shape</span></span><br><span class="line">array([[ <span class="number">2</span>,  <span class="number">5</span>],</span><br><span class="line">       [ <span class="number">7</span>, <span class="number">11</span>]])</span><br></pre></td></tr></table></figure>
</li>
<li><p>布尔数组</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#第一种方式</span></span><br><span class="line">a = np.arange(<span class="number">12</span>).reshape(<span class="number">3</span>,<span class="number">4</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b = a &gt; <span class="number">4</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b                                          <span class="comment"># b is a boolean with a&#x27;s shape</span></span><br><span class="line">array([[<span class="literal">False</span>, <span class="literal">False</span>, <span class="literal">False</span>, <span class="literal">False</span>],</span><br><span class="line">       [<span class="literal">False</span>,  <span class="literal">True</span>,  <span class="literal">True</span>,  <span class="literal">True</span>],</span><br><span class="line">       [ <span class="literal">True</span>,  <span class="literal">True</span>,  <span class="literal">True</span>,  <span class="literal">True</span>]])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a[b]                                       <span class="comment"># 1d array with the selected elements</span></span><br><span class="line">array([ <span class="number">5</span>,  <span class="number">6</span>,  <span class="number">7</span>,  <span class="number">8</span>,  <span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment">#第二种方式</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = np.arange(<span class="number">12</span>).reshape(<span class="number">3</span>,<span class="number">4</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b1 = np.array([<span class="literal">False</span>,<span class="literal">True</span>,<span class="literal">True</span>])             <span class="comment"># first dim selection</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b2 = np.array([<span class="literal">True</span>,<span class="literal">False</span>,<span class="literal">True</span>,<span class="literal">False</span>])       <span class="comment"># second dim selection</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a[b1,b2]                                  <span class="comment"># a weird thing to do</span></span><br><span class="line">array([ <span class="number">4</span>, <span class="number">10</span>])</span><br></pre></td></tr></table></figure>
</li>
<li><p>ix_函数</p>
<p>用于把向量生成为几个正交的向量</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = np.array([<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b = np.array([<span class="number">8</span>,<span class="number">5</span>,<span class="number">4</span>])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>c = np.array([<span class="number">5</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">8</span>,<span class="number">3</span>])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>ax,bx,cx = np.ix_(a,b,c)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>ax</span><br><span class="line">array([[[<span class="number">2</span>]],</span><br><span class="line">       [[<span class="number">3</span>]],</span><br><span class="line">       [[<span class="number">4</span>]],</span><br><span class="line">       [[<span class="number">5</span>]]])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>bx</span><br><span class="line">array([[[<span class="number">8</span>],</span><br><span class="line">        [<span class="number">5</span>],</span><br><span class="line">        [<span class="number">4</span>]]])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>cx</span><br><span class="line">array([[[<span class="number">5</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">3</span>]]])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>ax.shape, bx.shape, cx.shape</span><br><span class="line">((<span class="number">4</span>, <span class="number">1</span>, <span class="number">1</span>), (<span class="number">1</span>, <span class="number">3</span>, <span class="number">1</span>), (<span class="number">1</span>, <span class="number">1</span>, <span class="number">5</span>))</span><br></pre></td></tr></table></figure></li>
</ul>
<h2 id="广播"><a href="#广播" class="headerlink" title="广播"></a>广播</h2><p>广播的原则:在两个数组上操作时，NumPy 会逐个元素比较它们的形状。 它从尾随（即最右边）维度开始，并计算其 向左走。两个维度兼容以下情况</p>
<ol>
<li>它们是相等的，或者</li>
<li>其中之一是 1。</li>
</ol>
<p>如果不满足这些条件，则例外情况为 抛出，指示数组具有不兼容的形状。</p>
<p>赋值运算也会使用广播原则</p>
]]></content>
  </entry>
  <entry>
    <title>test136</title>
    <url>/2023/09/23/test136/</url>
    <content><![CDATA[<p>ccccccccccccccccccc</p>
<span id="more"></span>

<p>以上标记为一个分界线，用于展示显示的缩略内容</p>
<p>cccccccccc</p>
]]></content>
      <categories>
        <category>默认</category>
      </categories>
      <tags>
        <tag>默认</tag>
      </tags>
  </entry>
  <entry>
    <title>test2</title>
    <url>/2023/09/23/test2/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>test3</title>
    <url>/2023/09/23/test3/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>a</tag>
      </tags>
  </entry>
  <entry>
    <title>test5</title>
    <url>/2023/09/23/test5/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>默认</category>
      </categories>
      <tags>
        <tag>默认</tag>
      </tags>
  </entry>
  <entry>
    <title>test9</title>
    <url>/2023/09/23/test9/</url>
    <content><![CDATA[<p>d</p>
<p>发v</p>
<p>vvv一个</p>
]]></content>
      <categories>
        <category>默认</category>
      </categories>
      <tags>
        <tag>默认</tag>
      </tags>
  </entry>
</search>
